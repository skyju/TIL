-- STEP 03 : GROUP BY

-- 1. 고양이와 개는 몇 마리 있을까
SELECT ANIMAL_TYPE, COUNT(*)
FROM ANIMAL_INS
GROUP BY ANIMAL_TYPE
ORDER BY ANIMAL_TYPE;

-- 2. 동명 동물 수 찾기
SELECT NAME, COUNT(NAME)
FROM ANIMAL_INS
GROUP BY NAME
HAVING COUNT(NAME) >= 2
AND NAME IS NOT NULL
ORDER BY NAME;

-- 3. 입양 시각 구하기(1)
-- MySQL 풀이
SELECT HOUR, COUNT(*) AS COUNT
FROM (SELECT SUBSTR(DATETIME, 12, 2) AS HOUR FROM ANIMAL_OUTS) HOURS
GROUP BY HOUR
HAVING HOUR BETWEEN 9 AND 19
ORDER BY HOUR;

-- Oracle 풀이
SELECT EXTRACT(HOUR FROM CAST(DATETIME AS TIMESTAMP)) AS HOUR, COUNT(*) AS COUNT
FROM ANIMAL_OUTS 
GROUP BY EXTRACT(HOUR FROM CAST(DATETIME AS TIMESTAMP))
HAVING EXTRACT(HOUR FROM CAST(DATETIME AS TIMESTAMP)) BETWEEN 9 AND 19
ORDER BY HOUR;

-- Oracle 풀이2
SELECT TO_CHAR(DATETIME,'HH24') AS HOUR, COUNT(*) AS COUNT
FROM ANIMAL_OUTS
WHERE TO_CHAR(DATETIME, 'HH24') BETWEEN 09 AND 19 
GROUP BY TO_CHAR(DATETIME, 'HH24')
ORDER BY HOUR;

-- 4. 입양 시각 구하기(2) -- 고난도 였음.. 풀기 어려웠음
-- Oracle
SELECT D.HOUR, NVL(A.COUNT, 0)
FROM (
    SELECT LEVEL -1 AS HOUR 
    --LEVEL은 기본 1부터기 때문에 0부터 시작하기 위해서 -1
    FROM DUAL 
    CONNECT BY LEVEL <= 24) D 
    LEFT OUTER JOIN (
    SELECT TO_CHAR(DATETIME, 'HH24') AS HOUR, COUNT(*) AS COUNT
    FROM ANIMAL_OUTS
    WHERE DATETIME IS NOT NULL
    GROUP BY TO_CHAR(DATETIME, 'HH24')
    ORDER BY TO_CHAR(DATETIME, 'HH24')) A
ON D.HOUR = A.HOUR
ORDER BY D.HOUR;

-- MySQL
-- RECURSIVE 이용
-- WITH RECURSIVE (VIEW이름) AS(
-- 초기SQL UNION [ALL] 반복할SQL(+반복문을 멈출 WHERE절 포함)
-- ) SELECT * FROM (VIEW이름)

-- 원리
-- 1. 초기 SQL을 실행하면 실행한 결과셋은 recursive문을 선언할때 기재한 뷰에 담긴다.
-- 2. 반복할 SQL의 from 절에 뷰명을 이용해서 처리하거나 한다. 이는 상황에 따라 다르지만 주로 뷰명을 from절에 두고 반복문을 돌리는 것이 일반적이다.
-- 3. union 혹은 union all 연산을 한다.(경우에따라 다름 마이너스도 가능)
-- 4. 반복할 SQL에서 단하나의 레코드가 나오지 않을때 recursive문을 탈출한다.
-- 5. recursive문을 탈출하였으면 뷰명에 연산된 결과셋이 다시 담기게되고 뷰처럼 조회할 수 있다.

WITH RECURSIVE TIME AS(
    SELECT 0 AS HOUR
    UNION ALL
    SELECT HOUR+1 FROM TIME WHERE HOUR < 23
    ) SELECT HOUR, COUNT(HOUR(DATETIME)) AS 'COUNT'
FROM TIME LEFT OUTER JOIN ANIMAL_OUTS
ON (HOUR=HOUR(DATETIME))
GROUP BY HOUR;
